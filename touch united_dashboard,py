import streamlit as st
import pandas as pd
import sqlite3
import matplotlib.pyplot as plt

# Connect to the DB
conn = sqlite3.connect("united_analytics.db")

@st.cache_data
def load_match_data():
    query = """
    SELECT date, opponent, venue, result, goals_for, goals_against, xg_for, xg_against
    FROM matches
    ORDER BY date
    """
    df = pd.read_sql_query(query, conn)
    df['date'] = pd.to_datetime(df['date'])
    return df

# Load data
df = load_match_data()

# --- Streamlit UI ---
st.title("üî¥ Manchester United Analytics Dashboard")
st.markdown("Tracking every match performance, result, and expected goals.")

# Filters
venue_filter = st.selectbox("Filter by venue:", ["All", "Home", "Away"])
opponents = ["All"] + sorted(df["opponent"].unique().tolist())
opponent_filter = st.selectbox("Filter by opponent:", opponents)

filtered_df = df.copy()

if venue_filter != "All":
    filtered_df = filtered_df[filtered_df["venue"] == venue_filter]

if opponent_filter != "All":
    filtered_df = filtered_df[filtered_df["opponent"] == opponent_filter]

# --- Display Table ---
st.subheader("üìã Match Results")
st.dataframe(filtered_df, use_container_width=True)

# --- Plot: Goals vs xG ---
st.subheader("‚öΩ Goals vs Expected Goals (xG)")
fig, ax = plt.subplots()
ax.plot(filtered_df["date"], filtered_df["goals_for"], label="Goals For", marker="o")
ax.plot(filtered_df["date"], filtered_df["xg_for"], label="xG For", marker="x")
ax.plot(filtered_df["date"], filtered_df["goals_against"], label="Goals Against", marker="o")
ax.plot(filtered_df["date"], filtered_df["xg_against"], label="xG Against", marker="x")
ax.set_xlabel("Date")
ax.set_ylabel("Goals / xG")
ax.set_title("Manchester United Match Trend")
ax.legend()
plt.xticks(rotation=45)
st.pyplot(fig)

st.markdown("Made with ‚ù§Ô∏è by you.")
